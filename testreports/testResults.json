{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2022-12-11T16:45:34.697Z",
    "end": "2022-12-11T16:45:39.622Z",
    "duration": 4925,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4b617736-60b4-41e5-b0e4-bbbf528275b5",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "94fba29e-23a6-4a75-8940-7a8404e29134",
          "title": "add another todo tests",
          "fullFile": "C:\\Users\\matty\\Desktop\\Programowanie\\Selenium\\seleniumDemo\\test\\secondTest.js",
          "file": "\\test\\secondTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds another todo to app",
              "fullTitle": "add another todo tests successfully adds another todo to app",
              "timedOut": null,
              "duration": 4472,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//launch the browser\nlet driver = await new Builder().forBrowser(\"firefox\").build();\n//navigate to our app\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//add a todo\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"Learn Selenium\", Key.RETURN);\n//assert\nlet todoText = await driver\n  .findElement(By.xpath(\"//li[last()]\"))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n//assert using chai should\ntodoText.should.equal(\"Learn Selenium\");\n//close the browser\nawait driver.quit();",
              "err": {},
              "uuid": "dcfb58c8-5d8d-453d-bb8d-75788c4365f9",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dcfb58c8-5d8d-453d-bb8d-75788c4365f9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4472,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "8314dede-93ba-4287-a986-6764ae470018",
          "title": "add todo tests",
          "fullFile": "C:\\Users\\matty\\Desktop\\Programowanie\\Selenium\\seleniumDemo\\test\\firstTest.js",
          "file": "\\test\\firstTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds a todo to app",
              "fullTitle": "add todo tests successfully adds a todo to app",
              "timedOut": null,
              "duration": 4541,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//launch the browser\nlet driver = await new Builder().forBrowser(\"firefox\").build();\n//navigate to our app\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//add a todo\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"Learn Selenium\", Key.RETURN);\n//assert\nlet todoText = await driver\n  .findElement(By.xpath(\"//li[last()]\"))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n//assert using chai should\ntodoText.should.equal(\"Learn Selenium\");\n//close the browser\nawait driver.quit();",
              "err": {},
              "uuid": "628b0269-473d-4a2f-950e-f1fc4a486e5e",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "628b0269-473d-4a2f-950e-f1fc4a486e5e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4541,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testResults",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "C:/Users/matty/Desktop/Programowanie/Selenium/SeleniumDemo/testreports",
        "reportFilename": "testResults"
      },
      "version": "6.2.0"
    }
  }
}