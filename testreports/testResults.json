{
  "stats": {
    "suites": 3,
    "tests": 6,
    "passes": 5,
    "pending": 0,
    "failures": 1,
    "start": "2022-11-20T09:51:48.613Z",
    "end": "2022-11-20T09:52:52.600Z",
    "duration": 63987,
    "testsRegistered": 6,
    "passPercent": 83.33333333333334,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9a019a1b-2bb7-4e6c-8795-27f46c26a272",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8397b7ea-1d4e-48a3-9812-80890d5a07a7",
          "title": "add todo tests",
          "fullFile": "C:\\Users\\matty\\Desktop\\seleniumDemo\\test\\firstTest.js",
          "file": "\\test\\firstTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds a todo to app",
              "fullTitle": "add todo tests successfully adds a todo to app",
              "timedOut": null,
              "duration": 394,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//launch the browser\nlet driver = await new Builder().forBrowser(\"firefox\").build();\n//navigate to our app\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//add a todo\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"Learn Selenium\", Key.RETURN);\n//assert\nlet todoText = await driver\n  .findElement(By.xpath(\"//li[last()]\"))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n//assert using chai should\ntodoText.should.equal(\"Learn Selenium\");\n//close the browser\nawait driver.quit();",
              "err": {
                "message": "WebDriverError: Process unexpectedly closed with status 0",
                "estack": "WebDriverError: Process unexpectedly closed with status 0\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:524:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:587:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:515:28)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": null
              },
              "uuid": "46614e42-fa7b-4475-91b5-fcb8783ec14a",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "46614e42-fa7b-4475-91b5-fcb8783ec14a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 394,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "1fba12af-b679-41ca-b47d-e09478c1d391",
          "title": "add another todo tests",
          "fullFile": "C:\\Users\\matty\\Desktop\\seleniumDemo\\test\\secondTest.js",
          "file": "\\test\\secondTest.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"add another todo tests\"",
              "fullTitle": "add another todo tests \"before each\" hook in \"add another todo tests\"",
              "timedOut": null,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "ltCapabilities.capabilities[\"LT:Options\"].username = this.currentTest.title;\ndriver = new Builder()\n  .usingServer(gridUrl)\n  .withCapabilities(ltCapabilities.capabilities)\n  .build();",
              "err": {},
              "uuid": "22fcb239-4850-4013-89e6-af4fd220ca5a",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"add another todo tests\"",
              "fullTitle": "add another todo tests \"after each\" hook in \"add another todo tests\"",
              "timedOut": null,
              "duration": 912,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "5eb50272-5585-4f26-afc6-1c74b6027a0f",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "successfully adds another todo to app",
              "fullTitle": "add another todo tests successfully adds another todo to app",
              "timedOut": null,
              "duration": 13676,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//launch the browser\n//let driver = await new Builder().forBrowser(\"firefox\").build();\n//navigate to our app\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//add a todo\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"Learn Selenium\", Key.RETURN);\n//assert\nlet todoText = await driver\n  .findElement(By.xpath(\"//li[last()]\"))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n//assert using chai should\ntodoText.should.equal(\"Learn Selenium\");\n//close the browser\n//await driver.quit();",
              "err": {},
              "uuid": "da2992bc-11e4-4c1f-ab19-17fe1c6d6bd2",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "successfully adds another todo to app",
              "fullTitle": "add another todo tests successfully adds another todo to app",
              "timedOut": null,
              "duration": 20576,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//launch the browser\n// let driver = await new Builder().forBrowser(\"firefox\").build();\n//navigate to our app\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//add a todo\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"Learn Selenium\", Key.RETURN);\n//assert\nlet todoText = await driver\n  .findElement(By.xpath(\"//li[last()]\"))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n//assert using chai should\ntodoText.should.equal(\"Learn Selenium\");\n//close the browser\n//await driver.quit();",
              "err": {},
              "uuid": "615c4a86-f3c1-4e08-bd59-3c82913d8b4b",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "da2992bc-11e4-4c1f-ab19-17fe1c6d6bd2",
            "615c4a86-f3c1-4e08-bd59-3c82913d8b4b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 34252,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "211f3a5f-be9f-485f-bfe6-c80c791dbd75",
          "title": "add another todo tests",
          "fullFile": "C:\\Users\\matty\\Desktop\\seleniumDemo\\test\\paramTest.js",
          "file": "\\test\\paramTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds todo for browser Chrome, 93.0, Windows 10",
              "fullTitle": "add another todo tests successfully adds todo for browser Chrome, 93.0, Windows 10",
              "timedOut": null,
              "duration": 15152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "ltCapabilities.capabilities[\"LT:Options\"].platformName = os;\nltCapabilities.capabilities.browserName = browser;\nltCapabilities.capabilities.browserVersion = bVersion;\nltCapabilities.capabilities[\"LT:Options\"].username = this.test.title;\n//lauch the browser\ndriver = new Builder()\n  .usingServer(gridUrl)\n  .withCapabilities(ltCapabilities.capabilities)\n  .build();\n//navigate to our app\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//add a todo\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"Learn Selenium\", Key.RETURN);\n//assert\nlet todoText = await driver\n  .findElement(By.xpath(\"//li[last()]\"))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n//assert using chai should\ntodoText.should.equal(\"Learn Selenium\");\nawait driver.quit();",
              "err": {},
              "uuid": "16a2e42a-0e59-4438-8029-c8197070950c",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "successfully adds todo for browser Firefox, 91.0, Windows 10",
              "fullTitle": "add another todo tests successfully adds todo for browser Firefox, 91.0, Windows 10",
              "timedOut": null,
              "duration": 26040,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "ltCapabilities.capabilities[\"LT:Options\"].platformName = os;\nltCapabilities.capabilities.browserName = browser;\nltCapabilities.capabilities.browserVersion = bVersion;\nltCapabilities.capabilities[\"LT:Options\"].username = this.test.title;\n//lauch the browser\ndriver = new Builder()\n  .usingServer(gridUrl)\n  .withCapabilities(ltCapabilities.capabilities)\n  .build();\n//navigate to our app\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//add a todo\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"Learn Selenium\", Key.RETURN);\n//assert\nlet todoText = await driver\n  .findElement(By.xpath(\"//li[last()]\"))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n//assert using chai should\ntodoText.should.equal(\"Learn Selenium\");\nawait driver.quit();",
              "err": {},
              "uuid": "5b0d2765-2526-4a5c-aaca-526fd16ecbfe",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "successfully adds todo for browser Firefox, 90.0, Windows 10",
              "fullTitle": "add another todo tests successfully adds todo for browser Firefox, 90.0, Windows 10",
              "timedOut": null,
              "duration": 22119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "ltCapabilities.capabilities[\"LT:Options\"].platformName = os;\nltCapabilities.capabilities.browserName = browser;\nltCapabilities.capabilities.browserVersion = bVersion;\nltCapabilities.capabilities[\"LT:Options\"].username = this.test.title;\n//lauch the browser\ndriver = new Builder()\n  .usingServer(gridUrl)\n  .withCapabilities(ltCapabilities.capabilities)\n  .build();\n//navigate to our app\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//add a todo\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"Learn Selenium\", Key.RETURN);\n//assert\nlet todoText = await driver\n  .findElement(By.xpath(\"//li[last()]\"))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n//assert using chai should\ntodoText.should.equal(\"Learn Selenium\");\nawait driver.quit();",
              "err": {},
              "uuid": "4312ada9-3a80-4a48-ae40-6dd59f9707d3",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "16a2e42a-0e59-4438-8029-c8197070950c",
            "5b0d2765-2526-4a5c-aaca-526fd16ecbfe",
            "4312ada9-3a80-4a48-ae40-6dd59f9707d3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 63311,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testResults",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "C:/Users/matty/Desktop/SeleniumDemo/testreports",
        "reportFilename": "testResults"
      },
      "version": "6.2.0"
    }
  }
}